pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "nlawej-authentication"
        DOCKER_TAG = "latest"
        REGISTRY = "docker.io/sarra1998"
        CREDENTIALS_ID = 'dockerhub-creds'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('MicroServicesBackend/authentication-service') {
                    sh 'npm install'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('MicroServicesBackend/authentication-service') {
                    sh 'npm test || true'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE:$DOCKER_TAG MicroServicesBackend/authentication-service'
            }
        }

        stage('Push to Registry') {
          when {
                anyOf {
                    expression { env.BRANCH_NAME == 'main' }
                    expression { env.BRANCH_NAME == 'master' }
                    expression { env.BRANCH_NAME == null || env.BRANCH_NAME == '' } // pour les builds manuels
                }
            }
            steps {
                    withCredentials([usernamePassword(credentialsId: "${CREDENTIALS_ID}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh '''
                            echo "$PASSWORD" | docker login -u "sarra1998" --password-stdin
                            docker tag $DOCKER_IMAGE:$DOCKER_TAG $REGISTRY/$DOCKER_IMAGE:$DOCKER_TAG
                            docker push $REGISTRY/$DOCKER_IMAGE:$DOCKER_TAG
                        '''
                }

            }
        }
    }

    post {
        always {
            echo 'Pipeline finished'
        }
    }
}
